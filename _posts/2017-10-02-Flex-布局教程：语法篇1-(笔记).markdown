---
layout: post
title:  "Flex 布局教程：语法篇1 (笔记)"
date:   2017-10-02 08:36:15 +0800
categories:  
tags:  
    - react

---

tutorial from [2015年7月10日 Flex 布局教程：语法篇 - 阮一峰](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)

[blog with good transition effects](http://vgee.cn)

demo from [git](https://github.com/JailBreakC/flex-box-demo)


运行 powershell
```powershell
cd E:\n\learn\css
git clone https://github.com/JailBreakC/flex-box-demo.git
Rename-Item flex-box-demo flex
cd flex
```
网页布局（layout）是 CSS 的一个重点应用。

![](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071001.gif)

布局的传统解决方案，基于[盒状模型](https://developer.mozilla.org/en-US/docs/Web/CSS/box_model)，依赖 [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) 属性 + [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position)属性 + [`float`](https://developer.mozilla.org/en-US/docs/Web/CSS/float)属性。它对于那些特殊布局非常不方便，比如，[垂直居中](https://css-tricks.com/centering-css-complete-guide/)就不容易实现。


2009年，W3C 提出了一种新的方案----Flex 布局

![](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071003.jpg)

Flex 布局将成为未来布局的首选方案。本文介绍它的语法，[下一篇文章](http://www.ruanyifeng.com/blog/2015/07/flex-examples.html)给出常见布局的 Flex 写法。网友 [JailBreak](http://vgee.cn/) 为本文的所有示例制作了 [Demo](http://static.vgee.cn/static/index.html)，也可以参考。

以下内容主要参考了下面两篇文章：[A Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) 和 [A Visual Guide to CSS3 Flexbox Properties](https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties)。

## 一、Flex 布局是什么？

Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。

任何一个容器都可以指定为 Flex 布局。
```css
.box{display: flex;}
```
行内元素也可以使用 Flex 布局。
```css
.box{display: inline-flex;}
```

Webkit 内核的浏览器，必须加上`-webkit`前缀。

```css
.box{display: -webkit-flex;/* Safari */display: flex;}
```

注意，设为 Flex 布局以后，子元素的`float`、`clear`和`vertical-align`属性将失效。

## 二、基本概念

采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项"。

![](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png)

容器默认存在两根轴：  
水平的主轴（main axis）和垂直的交叉轴（cross axis）。  
主轴的开始位置（与边框的交叉点）叫做`main start`，  
结束位置叫做`main end`；  
交叉轴的开始位置叫做`cross start`，  
结束位置叫做`cross end`。

项目默认沿主轴排列。  
单个项目占据的主轴空间叫做`main size`，   
占据的交叉轴空间叫做`cross size`。